{"ast":null,"code":"import { createStore } from \"redux\";\nconst initalState = {\n  counter: 0,\n  ShowCounter: true\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    //NOTE:when working with Redux.You should never\n    return {\n      counter: state.counter + 1,\n      ShowCounter: state.ShowCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      ShowCounter: state.ShowCounter\n    };\n  }\n\n  if (action.type === \"decerement\") {\n    return {\n      counter: state.counter - 1,\n      ShowCounter: state.ShowCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      ShowCounter: !state.ShowCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer); //we create store and passed the reducer function on it\n\nexport default store; // export the store and provide to the components","map":{"version":3,"sources":["/Users/luulnegasi/Downloads/REDUX STARTER /src/store/indexStore.js"],"names":["createStore","initalState","counter","ShowCounter","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAApB;;AACA,MAAMC,cAAc,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBJ,WAAwB;AAAA,MAAXK,MAAW;;AACtD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACA,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD3B;AAELL,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELC,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFf,KAAP;AAID;;AACD,SAAOE,KAAP;AACD,CA3BD;;AA4BA,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAD,CAAzB,C,CAA2C;;AAE3C,eAAeK,KAAf,C,CAAsB","sourcesContent":["import { createStore } from \"redux\";\nconst initalState = { counter: 0, ShowCounter: true };\nconst counterReducer = (state = initalState, action) => {\n  if (action.type === \"increment\") {\n    //NOTE:when working with Redux.You should never\n    return {\n      counter: state.counter + 1,\n      ShowCounter: state.ShowCounter,\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      ShowCounter: state.ShowCounter,\n    };\n  }\n  if (action.type === \"decerement\") {\n    return {\n      counter: state.counter - 1,\n      ShowCounter: state.ShowCounter,\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      ShowCounter: !state.ShowCounter,\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer); //we create store and passed the reducer function on it\n\nexport default store; // export the store and provide to the components\n"]},"metadata":{},"sourceType":"module"}